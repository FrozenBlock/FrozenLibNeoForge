# AccessTransformer generated with liukrast translator

# Advancement
public-f net.minecraft.advancements.critereon.EffectsChangedTrigger$TriggerInstance effects
public-f net.minecraft.advancements.critereon.MobEffectsPredicate effectMap

# Network
public-f net.minecraft.client.multiplayer.ClientCommonPacketListenerImpl connection
public-f net.minecraft.server.network.ServerCommonPacketListenerImpl connection
public-f net.minecraft.server.network.ServerConfigurationPacketListenerImpl finishCurrentTask(Lnet/minecraft/server/network/ConfigurationTask$Type;)V
public-f net.minecraft.server.network.ServerConfigurationPacketListenerImpl currentTask

# Command
public-f net.minecraft.commands.synchronization.ArgumentTypeInfos register(Lnet/minecraft/core/Registry;Ljava/lang/String;Ljava/lang/Class;Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;)Lnet/minecraft/commands/synchronization/ArgumentTypeInfo;
public-f net.minecraft.commands.synchronization.ArgumentTypeInfos fixClassType(Ljava/lang/Class;)Ljava/lang/Class;

# Recipe
public-f net.minecraft.world.item.crafting.Ingredient$ItemValue <init>(Lnet/minecraft/world/item/ItemStack;)V
public-f net.minecraft.world.item.ItemStack ITEM_NON_AIR_CODEC

# Sculk Spreading

public net.minecraft.world.level.block.SculkVeinBlock$SculkVeinSpreaderConfig
# Tree Features
public-f net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecoratorType <init>(Lcom/mojang/serialization/MapCodec;)V
public-f net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/MapCodec;)V
public-f net.minecraft.world.level.levelgen.feature.foliageplacers.FoliagePlacerType <init>(Lcom/mojang/serialization/MapCodec;)V

# Items
public-f net.minecraft.world.item.ItemCooldowns cooldowns
public-f net.minecraft.world.item.ItemCooldowns tickCount
public-f net.minecraft.world.item.ItemCooldowns$CooldownInstance startTime
public-f net.minecraft.world.item.ItemCooldowns$CooldownInstance endTime
public-f net.minecraft.world.item.ItemCooldowns$CooldownInstance <init>(II)V
public-f net.minecraft.world.item.ItemStack components
public-f net.minecraft.world.item.CreativeModeTabs generateInstrumentTypes(Lnet/minecraft/world/item/CreativeModeTab$Output;Lnet/minecraft/core/HolderLookup;Lnet/minecraft/world/item/Item;Lnet/minecraft/tags/TagKey;Lnet/minecraft/world/item/CreativeModeTab$TabVisibility;)V
public-f net.minecraft.client.renderer.item.ItemProperties register(Lnet/minecraft/world/item/Item;Lnet/minecraft/resources/ResourceLocation;Lnet/minecraft/client/renderer/item/ClampedItemPropertyFunction;)V

public net.minecraft.world.item.CreativeModeTab$ItemDisplayBuilder
public net.minecraft.world.item.CreativeModeTab$TabVisibility
# Structures
public-f net.minecraft.world.level.levelgen.structure.StructurePiece getWorldPos(III)Lnet/minecraft/core/BlockPos$MutableBlockPos;
public-f net.minecraft.world.level.levelgen.structure.pools.SinglePoolElement <init>(Lcom/mojang/datafixers/util/Either;Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/structure/pools/StructureTemplatePool$Projection;Ljava/util/Optional;)V
public-f net.minecraft.world.level.levelgen.structure.ScatteredFeaturePiece updateAverageGroundHeight(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;I)Z
public-f net.minecraft.world.level.levelgen.structure.StructurePiece generateBox(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;IIIIIILnet/minecraft/world/level/block/state/BlockState;Lnet/minecraft/world/level/block/state/BlockState;Z)V
public-f net.minecraft.world.level.levelgen.structure.StructurePiece placeBlock(Lnet/minecraft/world/level/WorldGenLevel;Lnet/minecraft/world/level/block/state/BlockState;IIILnet/minecraft/world/level/levelgen/structure/BoundingBox;)V

public net.minecraft.world.level.levelgen.structure.pools.alias.Random
# Entities
public-f net.minecraft.world.entity.Entity updateInWaterStateAndDoWaterCurrentPushing()V
public-f net.minecraft.server.level.ServerLevel entityManager
public-f net.minecraft.world.entity.ai.navigation.WallClimberNavigation pathToPosition
public-f net.minecraft.world.entity.LivingEntity canBreatheUnderwater()Z

public net.minecraft.world.entity.monster.warden.Warden$VibrationUser
# Entity Models
public-f net.minecraft.world.entity.Entity DATA_POSE
public-f net.minecraft.client.model.HierarchicalModel animate(Lnet/minecraft/world/entity/AnimationState;Lnet/minecraft/client/animation/AnimationDefinition;F)V
public-f net.minecraft.world.entity.LivingEntity dead

# Entity Spawns

public net.minecraft.world.entity.SpawnPlacements$Data
# Mobs
public-f net.minecraft.world.effect.MobEffect <init>(Lnet/minecraft/world/effect/MobEffectCategory;I)V
public-f net.minecraft.world.entity.Mob goalSelector
public-f net.minecraft.world.entity.Mob targetSelector
public-f net.minecraft.world.entity.monster.warden.Warden isDiggingOrEmerging()Z

# Damage Sources
public-f net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/world/damagesource/DamageSource;
public-f net.minecraft.world.damagesource.DamageSources source(Lnet/minecraft/resources/ResourceKey;Lnet/minecraft/world/entity/Entity;Lnet/minecraft/world/entity/Entity;)Lnet/minecraft/world/damagesource/DamageSource;

# Blocks
public-f net.minecraft.world.level.block.Block registerDefaultState(Lnet/minecraft/world/level/block/state/BlockState;)V
public-f net.minecraft.client.renderer.Sheets chestMaterial(Ljava/lang/String;)Lnet/minecraft/client/resources/model/Material;
public-f net.minecraft.world.CompoundContainer container1
public-f net.minecraft.world.CompoundContainer container2
public-f net.minecraft.world.level.block.PointedDripstoneBlock$FluidInfo <init>(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/material/Fluid;Lnet/minecraft/world/level/block/state/BlockState;)V
public-f net.minecraft.world.level.block.MultifaceSpreader config
public-f net.minecraft.data.BlockFamilies familyBuilder(Lnet/minecraft/world/level/block/Block;)Lnet/minecraft/data/BlockFamily$Builder;

# Block Entities
public-f net.minecraft.world.level.block.entity.RandomizableContainerBlockEntity lootTable
public-f net.minecraft.world.level.block.entity.BrushableBlockEntity lootTable

# Render Types
public-f net.minecraft.client.renderer.RenderStateShard RENDERTYPE_ENTITY_TRANSLUCENT_EMISSIVE_SHADER
public-f net.minecraft.client.renderer.RenderStateShard NO_CULL
public-f net.minecraft.client.renderer.RenderStateShard COLOR_DEPTH_WRITE
public-f net.minecraft.client.renderer.RenderStateShard COLOR_WRITE
public-f net.minecraft.client.renderer.RenderStateShard DEPTH_WRITE
public-f net.minecraft.client.renderer.RenderStateShard NO_LAYERING
public-f net.minecraft.client.renderer.RenderStateShard POLYGON_OFFSET_LAYERING
public-f net.minecraft.client.renderer.RenderStateShard VIEW_OFFSET_Z_LAYERING
public-f net.minecraft.client.renderer.RenderStateShard OVERLAY
public-f net.minecraft.client.renderer.RenderType$CompositeRenderType <init>(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;IZZLnet/minecraft/client/renderer/RenderType$CompositeState;)V
public-f net.minecraft.client.renderer.RenderStateShard$TextureStateShard <init>(Lnet/minecraft/resources/ResourceLocation;ZZ)V
public-f net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TRANSPARENCY
public-f net.minecraft.client.renderer.RenderStateShard RENDERTYPE_TRANSLUCENT_SHADER
public-f net.minecraft.client.renderer.RenderStateShard$ShaderStateShard <init>(Ljava/util/function/Supplier;)V
public-f net.minecraft.client.renderer.RenderStateShard RENDERTYPE_TEXT_INTENSITY_SEE_THROUGH_SHADER
public-f net.minecraft.client.renderer.RenderStateShard LIGHTMAP
public-f net.minecraft.client.renderer.RenderStateShard NO_DEPTH_TEST
public-f net.minecraft.client.renderer.RenderStateShard EQUAL_DEPTH_TEST
public-f net.minecraft.client.renderer.RenderStateShard TRANSLUCENT_TARGET
public-f net.minecraft.client.renderer.RenderType create(Ljava/lang/String;Lcom/mojang/blaze3d/vertex/VertexFormat;Lcom/mojang/blaze3d/vertex/VertexFormat$Mode;ILnet/minecraft/client/renderer/RenderType$CompositeState;)Lnet/minecraft/client/renderer/RenderType$CompositeRenderType;
public-f net.minecraft.client.renderer.RenderStateShard POSITION_COLOR_SHADER

public net.minecraft.client.renderer.RenderType$CompositeState
public net.minecraft.client.renderer.RenderStateShard$OutputStateShard
# Biomes
public-f net.minecraft.data.worldgen.biome.OverworldBiomes calculateSkyColor(F)I
public-f net.minecraft.world.level.levelgen.feature.stateproviders.SimpleStateProvider <init>(Lnet/minecraft/world/level/block/state/BlockState;)V
public-f net.minecraft.world.level.biome.OverworldBiomeBuilder addBiomes(Ljava/util/function/Consumer;)V

# Noise
public-f net.minecraft.data.worldgen.NoiseData register(Lnet/minecraft/data/worldgen/BootstrapContext;Lnet/minecraft/resources/ResourceKey;ID[D)V

# Surface Rules
public-f net.minecraft.world.level.levelgen.SurfaceRules$SequenceRuleSource <init>(Ljava/util/List;)V
public-f net.minecraft.world.level.levelgen.SurfaceRules isBiome(Ljava/util/List;)Lnet/minecraft/world/level/levelgen/SurfaceRules$BiomeConditionSource;
public-f net.minecraft.world.level.levelgen.SurfaceRules$Context biome

public net.minecraft.world.level.levelgen.SurfaceRules$Condition
public net.minecraft.world.level.levelgen.SurfaceRules$Context
public net.minecraft.world.level.levelgen.SurfaceRules$LazyYCondition
# Placement Modifiers
public-f net.minecraft.world.level.levelgen.placement.PlacementContext level

# QuiltMC Resource Reloaders
public-f net.minecraft.resources.RegistryDataLoader$Loader registry

public net.minecraft.client.gui.screens.worldselection.CreateWorldScreen$DataPackReloadCookie
public net.minecraft.resources.RegistryDataLoader$LoadingFunction
# QuiltMC Surface Rules
public-f net.minecraft.world.level.levelgen.SurfaceRules$SequenceRule <init>(Ljava/util/List;)V

public net.minecraft.world.level.levelgen.SurfaceRules$SurfaceRule
public net.minecraft.world.level.levelgen.SurfaceRules$SequenceRule
# Ore Veins

public net.minecraft.world.level.levelgen.OreVeinifier$VeinType
# Registry
public-f net.minecraft.data.registries.VanillaRegistries validateThatAllBiomeFeaturesHaveBiomeFilter(Lnet/minecraft/core/HolderLookup$Provider;)V
public-f net.minecraft.data.Main bindRegistries(Ljava/util/function/BiFunction;Ljava/util/concurrent/CompletableFuture;)Lnet/minecraft/data/DataProvider$Factory;
public-f net.minecraft.core.MappedRegistry getOrCreateHolderOrThrow(Lnet/minecraft/resources/ResourceKey;)Lnet/minecraft/core/Holder$Reference;
public-f net.minecraft.core.registries.BuiltInRegistries freeze()V
public net.minecraft.core.registries.BuiltInRegistries$RegistryBootstrap
# Sounds
public-f net.minecraft.client.sounds.SoundManager soundEngine
public-f net.minecraft.client.sounds.SoundEngine soundDeleteTime
public-f net.minecraft.client.sounds.SoundEngine tickCount
public-f net.minecraft.client.sounds.SoundEngine instanceToChannel
public-f net.minecraft.client.sounds.SoundEngine channelAccess
public-f net.minecraft.sounds.SoundEvent <init>(Lnet/minecraft/resources/ResourceLocation;FZ)V

#Camera
public-f net.minecraft.client.Camera setRotation(FF)V
public-f net.minecraft.client.Camera xRot
public-f net.minecraft.client.Camera yRot

# Data Generation
public-f net.minecraft.data.DataGenerator vanillaPackOutput
public-f net.minecraft.data.DataGenerator$PackGenerator <init>(Lnet/minecraft/data/DataGenerator;ZLjava/lang/String;Lnet/minecraft/data/PackOutput;)V

public net.minecraft.data.DataGenerator$PackGenerator
# Particle
public-f net.minecraft.client.particle.Particle x
public-f net.minecraft.client.particle.Particle y
public-f net.minecraft.client.particle.Particle z

# Minecraft Instance
public-f net.minecraft.client.Minecraft isMultiplayerServer()Z

# Feature Flags

# DataFixerUpper
public-f net.minecraft.util.datafix.DataFixers createRenamer(Ljava/util/Map;)Ljava/util/function/UnaryOperator;

# World Loading
public-f net.minecraft.client.gui.screens.BackupConfirmScreen onProceed

# Screens
public-f net.minecraft.client.gui.screens.Screen PANORAMA

# Extra
public net.minecraft.client.model.geom.ModelPart$Vertex
protected-f net.minecraft.client.resources.sounds.AbstractTickableSoundInstance stop()V
public net.minecraft.world.level.block.PointedDripstoneBlock$FluidInfo
public net.minecraft.world.item.ItemCooldowns$CooldownInstance
public net.minecraft.resources.RegistryDataLoader$Loader
public net.minecraft.world.level.levelgen.SurfaceRules$SequenceRuleSource
public-f net.minecraft.world.flag.FeatureFlags REGISTRY
public-f net.minecraft.world.flag.FeatureFlags CODEC

public net.minecraft.client.renderer.LevelRenderer cullingFrustum
public net.minecraft.world.level.gameevent.EntityPositionSource resolveEntity(Lnet/minecraft/world/level/Level;)V
public net.minecraft.world.level.gameevent.EntityPositionSource entityOrUuidOrId
public net.minecraft.world.level.gameevent.EntityPositionSource yOffset